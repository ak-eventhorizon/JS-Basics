'use strict';

//**********************МЕТОДЫ МАССИВОВ****************************
//*****************************************************************

let arr = [1,2,3,4,5,6,7,8,-1,-2];
let arr1 = [1,2,3,4,5,6,7,8,-1,-2];
let arr0 = [];

//свертывание массива в значение (возвращает значение)
arr.reduce(function(a,b){return a+b;}); //33
arr.reduce(function(a,b){return (a>b)?a:b;}); //поиск наибольшего значения в массиве
arr.reduce(function(a,b){return (a<b)?a:b;}); //поиск наименьшего значения в массиве

//изменение порядка следования элементов в массиве на обратный (изменяет исходный массив)
arr1.reverse(); // [-2,-1,8,7,6,5,4,3,2,1]
arr1.reverse(); // [1,2,3,4,5,6,7,8,-1,-2]

//сортировка массива в соответствии с заданной функцией (изменяет исходный массив)
arr1.sort(); //без аргумента - сортировка происходит по возрастанию веса кода элемента в Unicode [-1, -2, 1, 2, 3, 4, 5, 6, 7, 8] 
arr1.sort(function(a,b){return a-b;}); //сортировка чисел по возрастанию [-2, -1, 1, 2, 3, 4, 5, 6, 7, 8]
arr1.sort(function(a,b){return b-a;}); //сортировка чисел по убыванию [8, 7, 6, 5, 4, 3, 2, 1, -1, -2]

//возвращение другого массива, отфильтрованного по указанной функции (возвращает другой массив)
arr.filter(function(a){return a < 0;}); // [-1, -2]
arr.filter(function(a){return a > 0;}); // [1,2,3,4,5,6,7,8]
arr.filter(function(a,i){return i%2 === 0;}); // [1,3,5,7,-1] - элементы с четными индексами

//возвращение другого массива, преобразованного поэлементно по указанной функции (возвращает другой массив)
arr.map(function(a){return a*2;}); // [2,4,6,8,10,12,14,16,-2,-4]
arr.map(function(a){return a*a*a;}); // [1,8,27,64,125,216,343,512,-1,-8]

//выполняет указанную функцию один раз для каждого элемента массива (возвращает undefined)
arr.forEach(function(a){arr0.push(a/2);}); // массив arr0 заполнится по итогам выполнения данного метода

//возвращение логического значения если каждый элемент массива соответствует условию (возвращает значение)
arr.every(function(a){return a < 9;}); //true
arr.every(function(a){return a > 3;}); //false
arr.every(function(a){return a%2 === 0;}); //false - все ли элементы четные?

//возвращение логического значения если хоть один элемент массива соответствует условию (возвращает значение)
arr.some(function(a){return a >= 8;}); //true
arr.some(function(a){return a >= 9;}); //false
arr.some(function(a){return a%2 === 0;}); //true - хоть один элемент четный?

//возвращение логического значения - содержит ли массив указанное значение (возвращает значение)
arr.includes(1); //true
arr.includes(-2); //true
arr.includes(9); //false

//преобразование многомерного массива в одномерный на заданную глубину
let multiArr = [
			[1,2,3],
			[4,5,6],
			[7,[8,9]]
			];

multiArr.flat(1); // [1, 2, 3, 4, 5, 6, 7, [8, 9]]			
multiArr.flat(2); // [1, 2, 3, 4, 5, 6, 7, 8, 9]

//возвращение другого массива; flatMap - это map, за которым идет flat с глубиной 1
let textArr = ['Hello','today I','will','use flatMap'];
textArr.flatMap(a => a.split(' ')); // ["Hello", "today", "I", "will", "use", "flatMap"]